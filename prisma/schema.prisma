// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @unique
  name            String
  gender          Gender[]
  lang            Lang
  birthDate       String
  birthTime       String
  birthLat        Float
  birthLong       Float
  birthChart      BirthChart? 
  goals           Goal[]      @relation(references: [id])
  pins            Pin[]
  likedPins       LikedPin[]
  savedPins       SavedPin[]
  role            Role        @default(USER)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now())
  lastSeenAt      DateTime    @default(now())
}

model BirthChart {
  id              Int        @id @default(autoincrement())
  user            User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String     @unique
  sunSign         ZodiacSign
  moonSign        ZodiacSign
  risingSign      ZodiacSign
  northNode       ZodiacSign
  southNode       ZodiacSign
  venus           ZodiacSign
}

model Goal {
  id              Int         @id @default(autoincrement())
  goal            String      @unique
  lang            Lang        @default(EN)
  users           User[]      @relation(references: [id])
  pins            Pin[]       @relation(references: [id])
}

model PinType {
  id              Int         @id @default(autoincrement())
  type            String      @unique
  pins            Pin[]       
}

model Pin {
  id              Int          @id @default(autoincrement())
  title           String
  description     String
  pictureUrl      String
  redirection     String
  creator         User       @relation(fields: [creatorId], references: [id])
  creatorId       String
  lang            Lang
  gender          Gender[]
  goals           Goal[]      @relation(references: [id])
  types           PinType[]
  likedBy         LikedPin[]   
  savedBy         SavedPin[]
  createdAt       DateTime    @default(now())
}

model SavedPin {
  id              Int          @id @default(autoincrement())
  user            User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  pin             Pin          @relation(fields: [pinId], references: [id], onDelete: Cascade)
  pinId           Int
  createdAt       DateTime     @default(now())
}

model LikedPin {
  id              Int          @id @default(autoincrement())
  user            User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  pin             Pin          @relation(fields: [pinId], references: [id], onDelete: Cascade)
  pinId           Int
  createdAt       DateTime     @default(now())
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  FEMALE
  MALE
}

enum ZodiacSign {
  ARIES
  TAURUS
  GEMINI
  CANCER
  LEO
  VIRGO
  LIBRA
  SCORPIO
  SAGITTARIUS
  CAPRICORN
  AQUARIUS
  PISCES
}

enum Lang {
  EN
  FR
}