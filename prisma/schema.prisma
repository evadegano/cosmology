// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             Int
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
  
}

model User {
  id              Int         @id @default(autoincrement())
  name            String
  email           String
  password        String
  birthYear       Int
  birthMonth      Int
  birthDay        Int
  birthHour       Int
  birthMin        Int
  birthChartId    Int?        @unique
  birthChart      BirthChart? @relation(fields: [birthChartId], references: [id])
  account         Account?
  session         Session?
  role            Role        @default(USER)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now())
  lastSeenAt      DateTime    @default(now())
}

model BirthChart {
  id              Int         @id @default(autoincrement())
  user            User?
  sunSign         SunSign     @relation(fields: [sunSignId], references: [id])
  sunSignId       Int
  moonSign        MoonSign    @relation(fields: [moonSignId], references: [id])
  moonSignId      Int
  risingSign      RisingSign  @relation(fields: [risingSignId], references: [id])
  risingSignId    Int
  northNode       NorthNode   @relation(fields: [northNodeId], references: [id])
  northNodeId     Int
  southNode       SouthNode   @relation(fields: [southNodeId], references: [id])
  southNodeId     Int
}

model SunSign {
  id              Int         @id @default(autoincrement())
  sign            ZodiacSign  @unique
  birthCharts     BirthChart[]
}

model MoonSign {
  id              Int         @id @default(autoincrement())
  sign            ZodiacSign  @unique
  birthCharts     BirthChart[]
}

model RisingSign {
  id              Int         @id @default(autoincrement())
  sign            ZodiacSign  @unique
  birthCharts     BirthChart[]
}

model NorthNode {
  id              Int         @id @default(autoincrement())
  sign            ZodiacSign  @unique
  birthCharts     BirthChart[]
}

model SouthNode {
  id              Int         @id @default(autoincrement())
  sign            ZodiacSign  @unique
  birthCharts     BirthChart[]
}

enum Role {
  USER
  ADMIN
}

enum ZodiacSign {
  ARIES
  TAURUS
  GEMINI
  CANCER
  LEO
  VIRGO
  LIBRA
  SCORPIO
  SAGITTARIUS
  CAPRICORN
  AQUARIUS
  PISCES
}